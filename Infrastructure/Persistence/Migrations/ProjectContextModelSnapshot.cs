// <auto-generated />
using System;
using Infrastructure.Persistence.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Afiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<int>("NumeroAfiliado")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMEROAFILIADO");

                    b.Property<int>("PlanMedicoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PLANMEDICOID");

                    b.Property<int>("TitularID")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TITULARID");

                    b.HasKey("Id")
                        .HasName("PK_AFILIADOS");

                    b.HasIndex("PlanMedicoId")
                        .HasDatabaseName("IX_AFILIADOS_PLANMEDICOID");

                    b.ToTable("AFILIADOS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("DIRECCION");

                    b.Property<int>("DuracionConsulta")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DURACIONCONSULTA");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ESPECIALIDADID");

                    b.Property<int>("ProfesionalId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PROFESIONALID");

                    b.HasKey("Id")
                        .HasName("PK_AGENDAS");

                    b.HasIndex("ProfesionalId")
                        .HasDatabaseName("IX_AGENDAS_PROFESIONALID");

                    b.ToTable("AGENDAS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("NVARCHAR2(8)")
                        .HasColumnName("ALTURA");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("CALLE");

                    b.Property<string>("Departamento")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("DEPARTAMENTO");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PERSONAID");

                    b.Property<string>("Piso")
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("PISO");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRESTADORID");

                    b.Property<string>("ProvinciaCiudad")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("PROVINCIACIUDAD");

                    b.HasKey("Id")
                        .HasName("PK_DIRECCIONES");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("IX_DIRECCIONES_PERSONAID");

                    b.HasIndex("PrestadorId")
                        .HasDatabaseName("IX_DIRECCIONES_PRESTADORID");

                    b.ToTable("DIRECCIONES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Documentacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PERSONAID");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRESTADORID");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("TIPODOCUMENTO");

                    b.HasKey("Id")
                        .HasName("PK_DOCUMENTACIONES");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("IX_DOCUMENTACIONES_PERSONAID");

                    b.HasIndex("PrestadorId")
                        .HasDatabaseName("IX_DOCUMENTACIONES_PRESTADORID");

                    b.ToTable("DOCUMENTACIONES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("CORREO");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PERSONAID");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRESTADORID");

                    b.HasKey("Id")
                        .HasName("PK_EMAILS");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("IX_EMAILS_PERSONAID");

                    b.HasIndex("PrestadorId")
                        .HasDatabaseName("IX_EMAILS_PRESTADORID");

                    b.ToTable("EMAILS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id")
                        .HasName("PK_ESPECIALIDADES");

                    b.ToTable("ESPECIALIDADES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.HorarioAtencion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgendaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AGENDAID");

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<int>("DiaDeAtencion")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DIADEATENCION");

                    b.Property<DateTime>("HoraFin")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("HORAFIN");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("HORAINICIO");

                    b.HasKey("Id")
                        .HasName("PK_HORARIOS_ATENCION");

                    b.HasIndex("AgendaId")
                        .HasDatabaseName("IX_HORARIOS_ATENCION_AGENDAID");

                    b.ToTable("HORARIOS_ATENCION", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AfiliadoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AFILIADOID");

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("APELLIDO");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("FECHANACIMIENTO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("NVARCHAR2(64)")
                        .HasColumnName("NOMBRE");

                    b.Property<int>("NumeroIntegrante")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMEROINTEGRANTE");

                    b.Property<int>("Parentesco")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARENTESCO");

                    b.HasKey("Id")
                        .HasName("PK_PERSONAS");

                    b.HasIndex("AfiliadoId")
                        .HasDatabaseName("IX_PERSONAS_AFILIADOID");

                    b.ToTable("PERSONAS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.PlanMedico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<int>("CostoMensual")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COSTOMENSUAL");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("NVARCHAR2(3)")
                        .HasColumnName("MONEDA");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("NVARCHAR2(32)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id")
                        .HasName("PK_PLANES_MEDICOS");

                    b.ToTable("PLANES_MEDICOS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Prestador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<string>("CentroMedico")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("CENTROMEDICO");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("NOMBRECOMPLETO");

                    b.Property<int>("Rol")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ROL");

                    b.HasKey("Id")
                        .HasName("PK_PRESTADORES");

                    b.ToTable("PRESTADORES", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.SituacionTerapeutica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Alta")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ALTA");

                    b.Property<DateTime?>("Baja")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("BAJA");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("NVARCHAR2(512)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)")
                        .HasColumnName("NOMBRE");

                    b.HasKey("Id")
                        .HasName("PK_SITUACIONES_TERAPEUTICAS");

                    b.ToTable("SITUACIONES_TERAPEUTICAS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("NVARCHAR2(16)")
                        .HasColumnName("NUMERO");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PERSONAID");

                    b.Property<int?>("PrestadorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PRESTADORID");

                    b.HasKey("Id")
                        .HasName("PK_TELEFONOS");

                    b.HasIndex("PersonaId")
                        .HasDatabaseName("IX_TELEFONOS_PERSONAID");

                    b.HasIndex("PrestadorId")
                        .HasDatabaseName("IX_TELEFONOS_PRESTADORID");

                    b.ToTable("TELEFONOS", (string)null);
                });

            modelBuilder.Entity("ESPECIALIZACIONES", b =>
                {
                    b.Property<int>("ESPECIALIDADID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("PRESTADORID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ESPECIALIDADID", "PRESTADORID");

                    b.HasIndex("PRESTADORID");

                    b.ToTable("ESPECIALIZACIONES");
                });

            modelBuilder.Entity("HISTORIAL_TERAPEUTICO", b =>
                {
                    b.Property<int>("PERSONAID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SITUACIONTERAPEUTICAID")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PERSONAID", "SITUACIONTERAPEUTICAID");

                    b.HasIndex("SITUACIONTERAPEUTICAID");

                    b.ToTable("HISTORIAL_TERAPEUTICO");
                });

            modelBuilder.Entity("Domain.Entities.Afiliado", b =>
                {
                    b.HasOne("Domain.Entities.PlanMedico", "PlanMedico")
                        .WithMany("Afiliados")
                        .HasForeignKey("PlanMedicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AFILIADOS_PLANES_MEDICOS_PLANMEDICOID");

                    b.Navigation("PlanMedico");
                });

            modelBuilder.Entity("Domain.Entities.Agenda", b =>
                {
                    b.HasOne("Domain.Entities.Prestador", "Profesional")
                        .WithMany("Agendas")
                        .HasForeignKey("ProfesionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AGENDAS_PRESTADORES_PROFESIONALID");

                    b.Navigation("Profesional");
                });

            modelBuilder.Entity("Domain.Entities.Direccion", b =>
                {
                    b.HasOne("Domain.Entities.Persona", "Persona")
                        .WithMany("Direcciones")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_DIRECCIONES_PERSONAS_PERSONAID");

                    b.HasOne("Domain.Entities.Prestador", "Prestador")
                        .WithMany("Direcciones")
                        .HasForeignKey("PrestadorId")
                        .HasConstraintName("FK_DIRECCIONES_PRESTADORES_PRESTADORID");

                    b.Navigation("Persona");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("Domain.Entities.Documentacion", b =>
                {
                    b.HasOne("Domain.Entities.Persona", "Persona")
                        .WithMany("Documentos")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_DOCUMENTACIONES_PERSONAS_PERSONAID");

                    b.HasOne("Domain.Entities.Prestador", "Prestador")
                        .WithMany("Documentaciones")
                        .HasForeignKey("PrestadorId")
                        .HasConstraintName("FK_DOCUMENTACIONES_PRESTADORES_PRESTADORID");

                    b.Navigation("Persona");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("Domain.Entities.Email", b =>
                {
                    b.HasOne("Domain.Entities.Persona", "Persona")
                        .WithMany("Emails")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_EMAILS_PERSONAS_PERSONAID");

                    b.HasOne("Domain.Entities.Prestador", "Prestador")
                        .WithMany("Emails")
                        .HasForeignKey("PrestadorId")
                        .HasConstraintName("FK_EMAILS_PRESTADORES_PRESTADORID");

                    b.Navigation("Persona");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("Domain.Entities.HorarioAtencion", b =>
                {
                    b.HasOne("Domain.Entities.Agenda", "Agenda")
                        .WithMany()
                        .HasForeignKey("AgendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HORARIOS_ATENCION_AGENDAS_AGENDAID");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("Domain.Entities.Persona", b =>
                {
                    b.HasOne("Domain.Entities.Afiliado", "Afiliado")
                        .WithMany("Integrantes")
                        .HasForeignKey("AfiliadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PERSONAS_AFILIADOS_AFILIADOID");

                    b.Navigation("Afiliado");
                });

            modelBuilder.Entity("Domain.Entities.Telefono", b =>
                {
                    b.HasOne("Domain.Entities.Persona", "Persona")
                        .WithMany("Telefonos")
                        .HasForeignKey("PersonaId")
                        .HasConstraintName("FK_TELEFONOS_PERSONAS_PERSONAID");

                    b.HasOne("Domain.Entities.Prestador", "Prestador")
                        .WithMany("Telefonos")
                        .HasForeignKey("PrestadorId")
                        .HasConstraintName("FK_TELEFONOS_PRESTADORES_PRESTADORID");

                    b.Navigation("Persona");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("ESPECIALIZACIONES", b =>
                {
                    b.HasOne("Domain.Entities.Especialidad", null)
                        .WithMany()
                        .HasForeignKey("ESPECIALIDADID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prestador", null)
                        .WithMany()
                        .HasForeignKey("PRESTADORID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HISTORIAL_TERAPEUTICO", b =>
                {
                    b.HasOne("Domain.Entities.Persona", null)
                        .WithMany()
                        .HasForeignKey("PERSONAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.SituacionTerapeutica", null)
                        .WithMany()
                        .HasForeignKey("SITUACIONTERAPEUTICAID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Afiliado", b =>
                {
                    b.Navigation("Integrantes");
                });

            modelBuilder.Entity("Domain.Entities.Persona", b =>
                {
                    b.Navigation("Direcciones");

                    b.Navigation("Documentos");

                    b.Navigation("Emails");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("Domain.Entities.PlanMedico", b =>
                {
                    b.Navigation("Afiliados");
                });

            modelBuilder.Entity("Domain.Entities.Prestador", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("Direcciones");

                    b.Navigation("Documentaciones");

                    b.Navigation("Emails");

                    b.Navigation("Telefonos");
                });
#pragma warning restore 612, 618
        }
    }
}
